{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","constants/productConstant.js","actions/productActions.js","components/CategoryBar.js","components/Footer.js","components/Rating.js","components/NumberToPKR.js","components/Product.js","components/Loader.js","components/Message.js","components/ProductCarousel.js","components/CategorizeProducts.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/ResetPasswordScreen.js","chatBotSteps.js","chatBotTheme.js","App.js","reducers/userReducers.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_EDIT_REQUEST","USER_EDIT_SUCCESS","USER_EDIT_FAIL","USER_EDIT_RESET","PASSWORD_RESET_REQUEST","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","style","width","Row","Col","md","Control","name","placeholder","onChange","target","value","className","Button","variant","color","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","src","alt","height","Toggle","aria-controls","Collapse","Nav","Link","fontSize","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","listProducts","listProductDetails","CategoryBar","products","productList","permittedValues","map","category","categoryList","Set","useEffect","href","marginLeft","toUpperCase","FooterPagePro","fluid","lg","xl","Date","getFullYear","Rating","text","NumberToPKR","num","x","afterPoint","toString","indexOf","substring","length","lastThree","Math","floor","otherNumbers","replace","Product","product","Card","_id","Img","image","Body","Text","as","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","fontColor","children","Alert","ProductCarousel","productTopRated","error","loading","Carousel","pause","Image","Caption","CategorizeProducts","categorizedProducts","filter","HomeScreen","search","Object","entries","key","class","sm","ProductScreen","match","window","scrollTo","qty","setQty","productDetails","successUpdate","productUpdate","success","params","undefined","console","log","idx","CarouselItem","ListGroup","description","charAt","slice","countInStock","Array","keys","justifyContent","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","SAVE_SHIPPING_ADDRESS","SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","productId","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","accumulator","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","post","username","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","orders","errorOrders","put","updateUserProfile","Table","striped","responsive","order","createdAt","totalPrice","isPaid","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","stripePromise","loadStripe","ProductDisplay","handleClick","App","query","URLSearchParams","event","stripe","fetch","method","json","session","redirectToCheckout","sessionId","PlaceOrderScreen","orderCreate","paymentMethod","setPaymentMethod","itemsPrice","taxPrice","shippingPrice","Check","label","checked","index","createOrder","orderItems","OrderScreen","orderId","orderDetails","orderDeliver","loadingDeliver","successDeliver","isDelivered","deliveredAt","paidAt","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","userEdit","loadingEdit","successEdit","errorEdit","editUser","ProductListScreen","productCreate","loadingCreate","successCreate","errorCreate","createdProduct","productDelete","loadingDelete","errorDelete","deleteProduct","ProductEditScreen","setImage","setCategory","setDescription","setPrice","setCountInStock","uploading","setUploading","loadingUpdate","errorUpdate","uploadImageHandler","file","files","formData","FormData","append","header","updateProduct","File","custom","accept","OrderListScreen","orderList","deleteOrder","ResetPasswordScreen","passwordReset","body","resetPassword","alert","chatBotSteps","trigger","options","end","chatBotTheme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","path","component","exact","PaymentScreen","theme","steps","Footer","resetPasswordReducer","action","reducer","combineReducers","reviews","existItem","find","orderPay","passwordResetConfirm","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.514bf25d.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\r\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\r\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\r\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\";\r\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\";\r\nexport const USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\";\r\nexport const USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\";\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\r\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\r\n\r\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\n\r\nexport const USER_EDIT_REQUEST = \"USER_EDIT_REQUEST\";\r\nexport const USER_EDIT_SUCCESS = \"USER_EDIT_SUCCESS\";\r\nexport const USER_EDIT_FAIL = \"USER_EDIT_FAIL\";\r\nexport const USER_EDIT_RESET = \"USER_EDIT_RESET\";\r\n\r\nexport const PASSWORD_RESET_REQUEST = \"PASSWORD_RESET_REQUEST\";\r\nexport const PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\";\r\nexport const PASSWORD_RESET_FAIL = \"PASSWORD_RESET_FAIL\";\r\n\r\nexport const PASSWORD_RESET_CONFIRM_REQUEST = \"PASSWORD_RESET_CONFIRM_REQUEST\";\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = \"PASSWORD_RESET_CONFIRM_SUCCESS\";\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = \"PASSWORD_RESET_CONFIRM_FAIL\";\r\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\nexport const ORDER_CREATE_RESET = \"ORDER_CREATE_RESET\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\r\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\r\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\r\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\r\n\r\nexport const ORDER_LIST_REQUEST = \"ORDER_LIST_REQUEST\";\r\nexport const ORDER_LIST_SUCCESS = \"ORDER_LIST_SUCCESS\";\r\nexport const ORDER_LIST_FAIL = \"ORDER_LIST_FAIL\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n\r\nexport const ORDER_DELETE_REQUEST = \"ORDER_DELETE_REQUEST\";\r\nexport const ORDER_DELETE_SUCCESS = \"ORDER_DELETE_SUCCESS\";\r\nexport const ORDER_DELETE_FAIL = \"ORDER_DELETE_FAIL\";","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_EDIT_REQUEST,\r\n  USER_EDIT_SUCCESS,\r\n  USER_EDIT_FAIL,\r\n  PASSWORD_RESET_REQUEST,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_REQUEST,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({\r\n    type: USER_LOGOUT,\r\n  });\r\n  dispatch({\r\n    type: USER_DETAILS_RESET,\r\n  });\r\n  dispatch({\r\n    type: ORDER_LIST_MY_RESET,\r\n  });\r\n  dispatch({\r\n    type: USER_LIST_RESET,\r\n  });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS, // To login the newly registered user\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PASSWORD_RESET_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    await axios.post(\"/api/users/reset_password/\", body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n      ? error.response.data.detail\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPasswordConfirm = (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    await axios.post(\"/api/users/reset_password_confirm/\", body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_CONFIRM_FAIL,\r\n      payload: error.response && error.response.data.detail\r\n      ? error.response.data.detail\r\n      : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`, // It is filled up from our local storage\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}/`, config); // id is dynamic because from admin panel we need to send user IDs, but when we use it in ProfileScreen we will send 'profile' string\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data, // assigning this data to 'user' state available in userProfileReducer\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`, // It is filled up from our local storage\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user, // Sending user as a data - accessing this using request.data in the backend\r\n      config\r\n    ); // id is dynamic because from admin panel we need to send user IDs, but when we use it in ProfileScreen we will send 'profile' string\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS, // To login the user with updated information\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`, // It is filled up from our local storage\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/`, config); // id is dynamic because from admin panel we need to send user IDs, but when we use it in ProfileScreen we will send 'profile' string\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`, // It is filled up from our local storage\r\n      },\r\n    };\r\n    const { data } = await axios.delete(`/api/users/delete/${id}`, config); // id is dynamic because from admin panel we need to send user IDs, but when we use it in ProfileScreen we will send 'profile' string\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const editUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_EDIT_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`, // It is filled up from our local storage\r\n      },\r\n    };\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n      config\r\n    ); // id is dynamic because from admin panel we need to send user IDs, but when we use it in ProfileScreen we will send 'profile' string\r\n\r\n    dispatch({\r\n      type: USER_EDIT_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_EDIT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction SearchBox() {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword) {\r\n      history.push(`/?keyword=${keyword}`);\r\n    } else {\r\n      history.push(history.push(history.location.pathname)); // if user has not written anything in the search box then stay on the same page\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline style={{ width: \"70%\" }}>\r\n      <Row>\r\n        <Col md={8}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            className=\"mr-sm-2 ml-sm-5\"\r\n          ></Form.Control>\r\n        </Col>\r\n        <Col>\r\n          <Button type=\"submit\" variant=\"outline-light\">\r\n            <i className=\"fa fa-search pr-3\" style={{color:\"white\"}} />\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    // console.log(\"Logout\");\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"primary\" variant=\"primary\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                src=\"https://i.postimg.cc/8zvhRjGG/coredecor-logo.png\"\r\n                alt=\"\"\r\n                width=\"120px\"\r\n                height=\"auto\"\r\n                className=\"img-responsive\"\r\n              />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"justify-content-end\" style={{ width: \"100%\" }}>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i\r\n                    className=\"fas fa-shopping-bag fas-color\"\r\n                    style={{ fontSize: 30 }}\r\n                  ></i>\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown\r\n                  id=\"username\"\r\n                  title={\r\n                    <span className=\"text-light my-auto\">{userInfo.name}</span>\r\n                  }\r\n                >\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i\r\n                      className=\"fas fa-user fas-color\"\r\n                      style={{ fontSize: 30 }}\r\n                    ></i>\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown\r\n                  id=\"adminmenu\"\r\n                  title={<span className=\"text-light my-auto\">Admin</span>}\r\n                >\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productlist\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderlist\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\r\n\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\r\n\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\r\n\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const listProducts = (keyword = \"\") => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products${keyword}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listTopRatedProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products/top/\");\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products/create/`, {}, config); // This is a post request request that's why we need to send something, in this case we are sending empty object. Product will be created with some sample data as configured in backend\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/update/${product._id}/`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // dispatch({\r\n    //   // Sending updated data to productDetailsReducer\r\n    //   type: PRODUCT_DETAILS_SUCCESS,\r\n    //   payload: data,\r\n    // }); \r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction CategoryBar() {\r\n  const productList = useSelector((state) => state.productList);\r\n  const { products } = productList;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const permittedValues = products.map((value) => value.category);\r\n  const categoryList = [...new Set(permittedValues)];\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"#home\" style={{ marginLeft: \"10%\" }}></Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          {categoryList.map((category) => (\r\n            <Nav.Link href={`/?keyword=${category}`}>\r\n              {category.toUpperCase()}S\r\n            </Nav.Link>\r\n          ))}\r\n        </Nav>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryBar;\r\n","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPagePro = () => {\r\n  return (\r\n    <MDBFooter className=\"page-footer font-small pt-4 mt-4 footer-color\">\r\n      <MDBContainer fluid className=\"text-center text-md-left\">\r\n        <MDBRow>\r\n          <hr className=\"clearfix w-100 d-md-none\" />\r\n          <MDBCol className=\"mb-4 mt-3 font-weight\" md=\"8\">\r\n            <div className=\"text-center\">\r\n              <h6 className=\"text-uppercase font-weight-bold\" style={{color:\"white\"}}>About Us</h6>\r\n              <hr\r\n                className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n                style={{ width: \"60px\" }}\r\n              />\r\n            </div>\r\n            <p className=\"text-center text-justify\">\r\n              CoreDecor is aimed to provide you with the latest in home\r\n              furnishings, home decor and accessories at a price you can afford.\r\n              We always carry products that will be the focus of your home's\r\n              décor with superior selection, value, and quality. CoreDecor is\r\n              more than just an online furniture store. We hand pick and curate\r\n              the best in quality and style for you and your home. Why spend\r\n              days driving from store to store trying to find that perfect look\r\n              or unique piece. Find everything you're looking for and more from\r\n              the comfort of your own home.\r\n            </p>\r\n          </MDBCol>\r\n\r\n          <hr className=\"clearfix w-100 d-md-none\" />\r\n          <MDBCol\r\n            lg=\"3\"\r\n            xl=\"3\"\r\n            className=\"text-uppercase mb-4 mt-3 font-weight\"\r\n          >\r\n            <h6 className=\"text-uppercase font-weight-bold\" style={{color:\"white\"}}>\r\n              <strong>Contact</strong>\r\n            </h6>\r\n            <hr\r\n              className=\"deep-purple accent-2 mb-4 mt-0 d-inline-block mx-auto\"\r\n              style={{ width: \"60px\" }}\r\n            />\r\n            <p>\r\n              <i className=\"fas fa-building mr-3\" /> Shop#12, Kala Khan Shopping Center, Shamsabad, Muree Road, Rawalpindi\r\n            </p>\r\n            <p>\r\n              <i className=\"fa fa-envelope mr-3\" /> Amjadbashir2090@gmail.com\r\n            </p>\r\n            <p>\r\n              <i className=\"fa fa-phone mr-3\" /> +92 321 5372090\r\n            </p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n      <hr />\r\n\r\n     \r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: CoreDecor\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default FooterPagePro;\r\n","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                    ? \"fas fa-star\"\r\n                    : value >=0.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                    ? \"fas fa-star\"\r\n                    : value >=1.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                    ? \"fas fa-star\"\r\n                    : value >=2.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                    ? \"fas fa-star\"\r\n                    : value >=3.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value === 5\r\n                    ? \"fas fa-star\"\r\n                    : value >=4.5\r\n                    ? 'fas fa-star-half-alt'\r\n                    : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n            \r\n            <span>{text && text}</span>  {/* if text exist then show the text */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","const NumberToPKR = (num) => {\r\n  var x = num;\r\n  x = x.toString();\r\n  var afterPoint = \"\";\r\n  if (x.indexOf(\".\") > 0) afterPoint = x.substring(x.indexOf(\".\"), x.length);\r\n  x = Math.floor(x);\r\n  x = x.toString();\r\n  var lastThree = x.substring(x.length - 3);\r\n  var otherNumbers = x.substring(0, x.length - 3);\r\n  if (otherNumbers !== \"\") lastThree = \",\" + lastThree;\r\n  return (\r\n    otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint\r\n  );\r\n};\r\n\r\nexport default NumberToPKR;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NumberToPKR from \"./NumberToPKR\";\r\n\r\n\r\nfunction Product({ product }) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/products/${product._id}`}>\r\n        <Card.Img src={product.image} />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/products/${product._id}`}>\r\n          <strong>{product.name}</strong>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <div className=\"my-2\">\r\n            <Rating\r\n              value={product.rating}\r\n              text={`${product.numReviews} reviews`}\r\n              color={\"#f8e825\"}\r\n            />\r\n          </div>\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h4\" className=\"font-weight-bold\">\r\n          PKR {NumberToPKR(product.price)}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader({ variant }) {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      variant={variant}\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, fontColor, children }) {\r\n  return (\r\n    <Alert\r\n      variant={variant}\r\n      style={{\r\n        color: fontColor,\r\n      }}\r\n    >\r\n      {children}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, Carousel, CardDeck } from \"react-bootstrap\";\r\nimport { listTopRatedProducts } from \"../actions/productActions\";\r\nimport NumberToPKR from \"./NumberToPKR\"\r\nimport Loader from \"./Loader\";\r\nimport Message from \"./Message\";\r\n\r\nfunction ProductCarousel() {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { error, loading, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopRatedProducts());\r\n  }, [dispatch]);\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\" fontColor=\"black\">\r\n      /\r\n    </Message>\r\n  ) : (\r\n    <Carousel\r\n      pause=\"hover\"\r\n      style={{\r\n        // backgroundImage: `url(\"https://i.postimg.cc/gkQ0gqhd/dLB5ai0.jpg\")`,\r\n      }}\r\n    >\r\n      {products.map((product) => (\r\n        <Carousel.Item\r\n          key={product._id}\r\n          className=\"product-carousel product-carousel-item-next product-carousel-item-prev product-carousel-item.active\"\r\n        >\r\n          <Link to={`/products/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className=\"product-carousel-caption\">\r\n              <h4>\r\n                {product.name} | PKR {NumberToPKR(product.price)}\r\n              </h4>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","function CategorizeProducts(products) {\r\n  const permittedValues = products.map((value) => value.category);\r\n  const categoryList = [...new Set(permittedValues)];\r\n  // console.log(categoryList);\r\n\r\n  var categorizedProducts = {};\r\n  categoryList.map(\r\n    (category) =>\r\n      (categorizedProducts[category] = products.filter(\r\n        (product) => product.category === category\r\n      ))\r\n  );\r\n\r\n  return categorizedProducts;\r\n}\r\n\r\nexport default CategorizeProducts;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n// import axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import products from \"../products\";\r\nimport Product from \"../components/Product\";\r\nimport { listProducts } from \"../actions/productActions\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport CategorizeProducts from \"../components/CategorizeProducts\";\r\n\r\nfunction HomeScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n  // const [products, setProducts] = useState([]); // products is a state and setProducts is used to update that state/array\r\n  let keyword = history.location.search;\r\n  // console.log(keyword)\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n\r\n    //====== All of this is now happening in productActions.js =======\r\n    // console.log(\"Use effect triggered\")\r\n    // async function fetchProducts() {\r\n    //   // Async function not need to be realtime necessarily\r\n    //   // const { data } = await axios.get(\"http://127.0.0.1:8000/api/products/\")\r\n    //   const { data } = await axios.get(\"api/products/\"); // http://127.0.0.1:8000/ is added in package.json as \"proxy\":\"http://127.0.0.1:8000/\"\r\n    //   setProducts(data);\r\n    // }\r\n    // fetchProducts();\r\n  }, [dispatch, keyword]); // [] because we want this to update when the component loads not when actual state element gets updated\r\n  // useEffect is loaded every time when the component loads or state value gets updated\r\n\r\n  // const products = []\r\n\r\n  const categorizedProducts = CategorizeProducts(products);\r\n\r\n  // console.log(categorizedProducts);\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>Latest Products</h1> */}\r\n      {!keyword && <ProductCarousel />}\r\n      {loading ? (\r\n        <Loader variant={\"primary\"} />\r\n      ) : error ? (\r\n        <Message variant={\"danger\"} fontColor={\"white\"}>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Row className=\"mt-3\">\r\n          {Object.entries(categorizedProducts).map(([key, value]) => {\r\n            return [\r\n              <button type=\"button\" class=\"btn btn-outline-info\">\r\n                <h5>{key.toUpperCase()}S</h5>\r\n              </button>,\r\n              value.map((product) => (\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                  <Product product={product} />\r\n                </Col>\r\n              )),\r\n            ];\r\n          })}\r\n          {/* {\r\n          products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))} */}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Card,\r\n  Carousel,\r\n  CarouselItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport NumberToPKR from \"../components/NumberToPKR\";\r\nimport { listProductDetails } from \"../actions/productActions\";\r\n// import axios from \"axios\";\r\n// import products from \"../products\";\r\n\r\nfunction ProductScreen({ match, history }) {\r\n  window.scrollTo(0, 0) \r\n\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { success: successUpdate } = productUpdate;\r\n\r\n  // const product = products.find((p) => p._id === match.params.id);\r\n  // const [product, setProduct] = useState([]); // products is a state and setProducts is used to update that state/array\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n\r\n    // console.log(\"Use effect triggered\")\r\n    // async function fetchProduct() {\r\n    //   // Async function not need to be realtime necessarily\r\n    //   // const { data } = await axios.get(\"http://127.0.0.1:8000/api/products/\")\r\n    //   const { data } = await axios.get(`/api/products/${match.params.id}`); // http://127.0.0.1:8000/ is added in package.json as \"proxy\":\"http://127.0.0.1:8000/\"\r\n    //   setProduct(data);\r\n    // }\r\n    // fetchProduct();\r\n  }, [dispatch, match, successUpdate]); // It's loaded every time when the component loads or state value gets updated\r\n  // // [] because we want this to update when the component loads not when actual state element gets updated\r\n\r\n  // const product = {};\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader variant={\"primary\"} />\r\n      ) : error ? (\r\n        <Message variant={\"danger\"} fontColor={\"white\"}>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Carousel>\r\n              {product.image === undefined\r\n                ? console.log(product.image)\r\n                : product.image.map((x, idx) => (\r\n                    <CarouselItem key={idx}>\r\n                      <Image src={x} alt={product.title} fluid />\r\n                      {/* fluid is used to display the image properly */}\r\n                    </CarouselItem>\r\n                  )) /* Ternary condition purpose is to avoid error which I get whenever state is empty in the start of reloading */}\r\n            </Carousel>\r\n\r\n            {/* {console.log(product.image)} */}\r\n            {/* {<h2>{product.image}</h2>} */}\r\n            {/* {<Image src={process.env.PUBLIC_URL + product.images[0]} fluid />} */}\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              {\" \"}\r\n              {/* Add the flush variant to remove outer borders and rounded corners to render list group items edge-to-edge in a parent container */}\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                  color={\"#f8e825\"}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>PKR {product.price && NumberToPKR(product.price)}</ListGroup.Item>\r\n              <ListGroup.Item>{product.description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\" style={{fontSize:\"18px\"}}>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>PKR {product.price && NumberToPKR(product.price)}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Category:</Col>\r\n                    <Col>\r\n                      {product.category && product.category.charAt(0).toUpperCase() +\r\n                        product.category.slice(1)}{\" \"}\r\n                      {/* capitalizeFirstLetter, https://stackoverflow.com/questions/1026069/how-do-i-make-the-first-letter-of-a-string-uppercase-in-javascript?page=1&tab=votes#tab-top */}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col className=\"ml-3 mr-4\">\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                          style={{color:\"black\"}}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className=\"btn-block\"\r\n                    type=\"button\"\r\n                    disabled={product.countInStock === 0}\r\n                  >\r\n                    ADD TO CART\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const SAVE_SHIPPING_ADDRESS = \"SAVE_SHIPPING_ADDRESS\";\r\nexport const SAVE_PAYMENT_METHOD = \"SAVE_PAYMENT_METHOD\";\r\nexport const CART_CLEAR_ITEMS = \"CART_CLEAR_ITEMS\";\r\n","import axios from \"axios\";\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  SAVE_SHIPPING_ADDRESS,\r\n  SAVE_PAYMENT_METHOD,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image[0],\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1; // It will give ?qty=1 or 2 .etc.\r\n  // console.log(\"qty: \", qty)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  // console.log(\"cartItems: \", cartItems);\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h3>SHOPPING CART</h3>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"primary\" fontColor=\"red\">\r\n            <h5>Your cart is empty</h5>\r\n            <Link to=\"/\"> Go to Home Page</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {\" \"}\r\n            {/* flush, to remove borders */}\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={3}>PKR {item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <h3>SUBTOTAL</h3>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Products Quantity:</Col>\r\n                <Col>\r\n                  {cartItems.reduce(\r\n                    (accumulator, item) => accumulator + item.qty,\r\n                    0\r\n                  )}\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Price (Without Tax): </Col>\r\n                <Col>\r\n                  PKR{\" \"}\r\n                  {cartItems\r\n                    .reduce(\r\n                      (accumulator, item) =>\r\n                        accumulator + item.qty * item.price,\r\n                      0\r\n                    )\r\n                    .toFixed(2)}\r\n                  {/* A reducer is a function which takes two arguments — the current state \r\n                and an action — and returns based on both arguments a new state. \r\n                accumulator is initialized to 0\r\n                .toFixed(2) is used to set max decimal places to the right */}\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item\r\n              style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n              <Button\r\n                type=\"button\"\r\n                className=\"btn-block\" // Full width button\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                PROCEED TO CHECKOUT\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({ location, history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, userInfo, error } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Submitted\");\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>Log In</h2>\r\n      {loading && <Loader />}\r\n      {error && (\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\" className=\"mt-3\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\" className=\"mt-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n\r\n        <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row>\r\n        <Col>\r\n          New User?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n        Forgot your Password?{\" \"}\r\n        <Link to={\"/resetpassword\"}>\r\n            Reset Password\r\n        </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Submitted\");\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>Register</h2>\r\n      {loading && <Loader />}\r\n      {error && (\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      {message && ( // Only be shown when the passwords do not match\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {message}\r\n        </Message>\r\n      )}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\" className=\"mt-3\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\" className=\"mt-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"confirmPassword\" className=\"mt-3\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row>\r\n        <Col>\r\n          Already have an account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Row, Col, Button, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin); // User should be logged in\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, orders, error: errorOrders } = orderListMy; // loading as loadingOrders and error as loadingErrors because we already have loading and error\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({\r\n          type: USER_UPDATE_PROFILE_RESET,\r\n        });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name); // Getting name and from from user which has a data sent by backend\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, dispatch, user, userInfo, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Submitted\");\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      //   console.log(\"Updating....\");\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id, // Getting id from user which has a data sent by backend\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>YOUR PROFILE</h2>\r\n        {loading && <Loader />}\r\n        {error && (\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {error}\r\n          </Message>\r\n        )}\r\n        {message && ( // Only be shown when the passwords do not match\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {message}\r\n          </Message>\r\n        )}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\" className=\"mt-3\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\" className=\"mt-3\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\" className=\"mt-3\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>ORDER DETAILS</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {errorOrders}\r\n          </Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            {\" \"}\r\n            {/* stripped means having different row colors*/}\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders\r\n                ? orders.map((order) => (\r\n                    <tr key={order._id}>\r\n                      <td>{order._id}</td>\r\n                      <td>{order.createdAt.substring(0, 10)}</td>\r\n                      <td>PKR {order.totalPrice}</td>\r\n                      <td>\r\n                        {order.isPaid ? (\r\n                          <i\r\n                            className=\"fas fa-check\"\r\n                            style={{ color: \"#32CD32\" }}\r\n                          ></i>\r\n                        ) : (\r\n                          <i\r\n                            className=\"fas fa-times\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        )}\r\n                      </td>\r\n                      <td>\r\n                        <LinkContainer to={`/order/${order._id}`}>\r\n                          <Button>DETAILS</Button>\r\n                        </LinkContainer>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                : console.log(\"\")}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_DELETE_REQUEST,\r\n  ORDER_DELETE_SUCCESS,\r\n  ORDER_DELETE_FAIL\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/pay/`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/deliver/`,\r\n      {}, // In put we need to send something if don't have any data then just send empty object i.e, {}\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // getInitial State, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteOrder = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo }, // local-storage, go to userLogin and grab userInfo\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/orders/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Login</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      \r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"submitted\");\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/placeorder\"); // https://reactrouter.com/web/api/history\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 />\r\n        <h2>Shipping</h2>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"address\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter address\"\r\n              value={address ? address : \"\"}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"city\" className=\"mt-3\">\r\n            <Form.Label>City</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter city\"\r\n              value={city ? city : \"\"}\r\n              onChange={(e) => setCity(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"postalCode\" className=\"mt-3\">\r\n            <Form.Label>Postal Code</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter postal code\"\r\n              value={postalCode ? postalCode : \"\"}\r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"country\" className=\"mt-3\">\r\n            <Form.Label>Country</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"Enter country\"\r\n              value={country ? country : \"\"}\r\n              onChange={(e) => setCountry(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n// import \"../styles/paymentScreen.css\";\r\n// Make sure to call `loadStripe` outside of a component’s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\r\nconst ProductDisplay = ({ handleClick }) => (\r\n  <section>\r\n    <div className=\"product\">\r\n      <img\r\n        src=\"https://i.imgur.com/EHyR2nP.png\"\r\n        alt=\"The cover of Stubborn Attachments\"\r\n      />\r\n      <div className=\"description\">\r\n        <h3>Stubborn Attachments</h3>\r\n        <h5>$20.00</h5>\r\n      </div>\r\n    </div>\r\n    <button\r\n      type=\"button\"\r\n      id=\"checkout-button\"\r\n      role=\"link\"\r\n      onClick={handleClick}\r\n    >\r\n      Checkout\r\n    </button>\r\n  </section>\r\n);\r\nconst Message = ({ message }) => (\r\n  <section>\r\n    <p>{message}</p>\r\n  </section>\r\n);\r\nexport default function App() {\r\n  const [message, setMessage] = useState(\"\");\r\n  useEffect(() => {\r\n    // Check to see if this is a redirect back from Checkout\r\n    const query = new URLSearchParams(window.location.search);\r\n    if (query.get(\"success\")) {\r\n      setMessage(\"Order placed! You will receive an email confirmation.\");\r\n    }\r\n    if (query.get(\"canceled\")) {\r\n      setMessage(\r\n        \"Order canceled -- continue to shop around and checkout when you're ready.\"\r\n      );\r\n    }\r\n  }, []);\r\n  const handleClick = async (event) => {\r\n    const stripe = await stripePromise;\r\n    const response = await fetch(\"/create-checkout-session\", {\r\n      method: \"POST\",\r\n    });\r\n    const session = await response.json();\r\n    // When the customer clicks on the button, redirect them to Checkout.\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: session.id,\r\n    });\r\n    if (result.error) {\r\n      // If `redirectToCheckout` fails due to a browser or network\r\n      // error, display the localized error message to your customer\r\n      // using `result.error.message`.\r\n    }\r\n  };\r\n  return message ? (\r\n    <Message message={message} />\r\n  ) : (\r\n    <ProductDisplay handleClick={handleClick} />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Form,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport NumberToPKR from \"../components/NumberToPKR\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const salesTax = 0;\r\n  const shippingCost = 0;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { loading, success, order, error } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Credit Card\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  cart.itemsPrice = Number(\r\n    cart.cartItems\r\n      .reduce((accumulator, item) => accumulator + item.qty * item.price, 0)\r\n      .toFixed(2)\r\n  );\r\n\r\n  cart.taxPrice = Number((salesTax * cart.itemsPrice).toFixed(2));\r\n\r\n  cart.shippingPrice = Number(shippingCost);\r\n\r\n  cart.totalPrice = Number(\r\n    (cart.itemsPrice + cart.taxPrice + cart.shippingPrice).toFixed(2)\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({\r\n        type: ORDER_CREATE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, success, history]); // This will trigger when success or history changes\r\n\r\n  // console.log(cart.cartItems);\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    // history.push(\"/payment/\")\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>SHIPPING ADDRESS</h3>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"  \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h3>PAYMENT METHOD</h3>\r\n\r\n              <Form>\r\n                <Form.Group>\r\n                  <Col>\r\n                    <Form.Check\r\n                      type=\"radio\"\r\n                      label={\r\n                        <p>\r\n                          Credit Card <i className=\"fas fa-credit-card\"></i>\r\n                        </p>\r\n                      }\r\n                      id=\"creditCard\"\r\n                      name=\"paymentMethod\"\r\n                      checked\r\n                      onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h3>ORDER PRODUCTS</h3>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x PKR {NumberToPKR(item.price)} = PKR{\" \"}\r\n                          {NumberToPKR((item.qty * item.price).toFixed(2))}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                <h3>ORDER SUMMARY</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Products:</Col>\r\n                  <Col>PKR {NumberToPKR(cart.itemsPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Delivery:</Col>\r\n                  <Col>PKR {NumberToPKR(cart.shippingPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>PKR {NumberToPKR(cart.taxPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Total Price:</Col>\r\n                  <Col>PKR {NumberToPKR(cart.totalPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && (\r\n                  <Message variant=\"danger\" fontColor=\"black\">\r\n                    {error}\r\n                  </Message>\r\n                )}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport NumberToPKR from \"../components/NumberToPKR\";\r\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }) {\r\n  const orderId = match.params.id;\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = Number(\r\n      order.orderItems\r\n        .reduce((accumulator, item) => accumulator + item.qty * item.price, 0)\r\n        .toFixed(2)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) history.push(\"/login\");\r\n\r\n    if (!order || Number(orderId) !== order._id || successDeliver) {\r\n      dispatch({\r\n        type: ORDER_DELIVER_RESET,\r\n      });\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, history, order, orderId, successDeliver]); // This will trigger on when success or history changes\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(orderId)); // Update isDelivered to true in the backend\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\" fontColor=\"black\">\r\n      {error}\r\n    </Message>\r\n  ) : (\r\n    <div>\r\n      <h2>ORDER ID: {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h3>SHIPPING ADDRESS</h3>\r\n              <p>\r\n                <strong>User: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"  \"}\r\n                {order.shippingAddress.postalCode},{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\" fontColor=\"black\">\r\n                  Delivered on {order.deliveredAt.substring(0, 10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\" fontColor=\"black\">\r\n                  Not Delivered\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h3>PAYMENT METHOD</h3>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod} <i className=\"fas fa-credit-card\"></i>\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\" fontColor=\"black\">\r\n                  Paid on {order.paidAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\" fontColor=\"black\">\r\n                  Not Paid\r\n                </Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h3>ORDER PRODUCTS</h3>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={2}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/products/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x PKR {NumberToPKR(item.price)} = PKR{\" \"}\r\n                          {NumberToPKR((item.qty * item.price).toFixed(2))}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n              >\r\n                <h3>ORDER SUMMARY</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Products:</Col>\r\n                  <Col>PKR {NumberToPKR(order.itemsPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Delivery:</Col>\r\n                  <Col>PKR {NumberToPKR(order.shippingPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>PKR {NumberToPKR(order.taxPrice)}</Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>Total Price:</Col>\r\n                  <Col>PKR {NumberToPKR(order.totalPrice)}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && !order.isDelivered && (\r\n                <ListGroup.Item\r\n                  style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn btn-block\"\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark as Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, users, error } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    userInfo && userInfo.isAdmin\r\n      ? dispatch(listUsers())\r\n      : history.push(\"/login\");\r\n  }, [dispatch, history, userInfo, successDelete]); // successDelete dependency added because we need to update user list whenever user deleted\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\"))\r\n      dispatch(deleteUser(id));\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>USERS</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"#32CD32\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                    <i>{\"  \"}</i>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, editUser } from \"../actions/userActions\";\r\nimport { USER_EDIT_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userEdit = useSelector((state) => state.userEdit);\r\n  const {\r\n    loading: loadingEdit,\r\n    success: successEdit,\r\n    error: errorEdit,\r\n  } = userEdit;\r\n\r\n  useEffect(() => {\r\n    if (successEdit) {\r\n      dispatch({ type: USER_EDIT_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user || user._id !== Number(userId)) {\r\n        // Number(userId), because userId is of string type\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, history, successEdit, user, userId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(editUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Back</Link>\r\n      <FormContainer>\r\n        <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>EDIT USER</h2>\r\n        {loadingEdit && <Loader />}\r\n        {errorEdit && <Message variant=\"danger\" fontColor=\"black\">{errorEdit}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {error}\r\n          </Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\" className=\"mt-3\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isadmin\" className=\"mt-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport NumberToPKR from '../components/NumberToPKR'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstant\"; // Because we need to reset createProductReducer\r\n\r\nfunction ProductListScreen({ match, history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    success: successCreate,\r\n    error: errorCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_RESET,\r\n    });\r\n    if (userInfo) {\r\n      if (!userInfo.isAdmin) history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate)\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    else dispatch(listProducts());\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successCreate,\r\n    successDelete,\r\n    createdProduct,\r\n  ]); // successDelete dependency added because we need to update product list whenever product deleted\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\"))\r\n      dispatch(deleteProduct(id));\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n  return (\r\n    <div>\r\n      <Button className=\"my-3\" onClick={createProductHandler}>\r\n        <i className=\"fas fa-plus\"></i> Create Product\r\n      </Button>\r\n\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && (\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {errorCreate}\r\n        </Message>\r\n      )}\r\n\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && (\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {errorDelete}\r\n        </Message>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>STOCK</th>\r\n              <th>ACTION</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>PKR {product.price && NumberToPKR(product.price)}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.countInStock}</td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <i>{\"  \"}</i>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash-alt\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstant\";\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n  } = productUpdate;\r\n\r\n  //   const userEdit = useSelector((state) => state.userEdit);\r\n  //   const {\r\n  //     loading: loadingEdit,\r\n  //     success: successEdit,\r\n  //     error: errorEdit,\r\n  //   } = userEdit;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_RESET,\r\n      });\r\n      dispatch(listProductDetails(productId)); // Get updated details\r\n      history.push(\"/admin/productlist\");\r\n    } else {\r\n      if (!product || product._id !== Number(productId)) {\r\n        // Number(productId), because productId is of string type\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setImage(product.image);\r\n        setCategory(product.category);\r\n        setDescription(product.description);\r\n        setPrice(product.price);\r\n        setCountInStock(product.countInStock);\r\n      }\r\n    }\r\n  }, [dispatch, history, successUpdate, product, productId]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        image,\r\n        category,\r\n        description,\r\n        price,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadImageHandler = async (e) => {\r\n    // console.log(\"Image is uploading\");\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"product_id\", productId);\r\n    formData.append(\"image\", file);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        header: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        \"/api/products/upload/\",\r\n        formData,\r\n        config\r\n      );\r\n\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/productlist\">Back</Link>\r\n      <FormContainer>\r\n        <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          EDIT PRODUCT\r\n        </h2>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && (\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {errorUpdate}\r\n          </Message>\r\n        )}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\" fontColor=\"black\">\r\n            {error}\r\n          </Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n\r\n              <Form.File\r\n                id=\"image-file\"\r\n                custom\r\n                accept=\".jpg,.jpeg,.png\"\r\n                onChange={uploadImageHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"stock\">\r\n              <Form.Label>Stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter quantity available\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport NumberToPKR from \"../components/NumberToPKR\";\r\nimport { listOrders, deleteOrder } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, orders, error } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    userInfo && userInfo.isAdmin\r\n      ? dispatch(listOrders())\r\n      : history.push(\"/login\");\r\n  }, [dispatch, history, userInfo]); // successDelete dependency added because we need to update user list whenever user deleted\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this order?\"))\r\n      dispatch(deleteOrder(id));\r\n      // console.log(\"order deleted\")\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>ORDERS</h2>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>AMOUNT</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>ACTION</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>PKR {order.totalPrice && NumberToPKR(order.totalPrice)}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"#32CD32\" }}>\r\n                      {\" \"}\r\n                      {order.paidAt.substring(0, 10)}\r\n                    </i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"#32CD32\" }}>\r\n                      {\" \"}\r\n                      {order.deliveredAt.substring(0, 10)}\r\n                    </i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                <i>{\"  \"}</i>\r\n                <Button\r\n                  variant=\"danger\"\r\n                  className=\"btn-sm\"\r\n                  onClick={() => deleteHandler(order._id)}\r\n                >\r\n                  <i className=\"fas fa-trash-alt\"></i>\r\n                </Button>\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}/`}>\r\n                    <Button variant=\"light\" className=\"button-sm\">\r\n                      DETAILS\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { resetPassword } from \"../actions/userActions\";\r\n\r\nfunction ResetPasswordScreen({ history }) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const passwordReset = useSelector((state) => state.passwordReset);\r\n  const { loading, error } = passwordReset;\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Submitted\");\r\n    dispatch(resetPassword(email));\r\n    window.alert(\"Reset link will be sent to your email\")\r\n\r\n    history.push(\"/\")\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h2 style={{ display: \"flex\", justifyContent: \"center\" }}>Reset Password</h2>\r\n      {loading && <Loader />}\r\n      {error && (\r\n        <Message variant=\"danger\" fontColor=\"black\">\r\n          {error}\r\n        </Message>\r\n      )}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"email\" className=\"mt-3\">\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        \r\n\r\n        <Button type=\"Submit\" variant=\"primary\" className=\"mt-4\">\r\n            Reset\r\n        </Button>\r\n      </Form>\r\n\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordScreen;\r\n","const chatBotSteps = [\r\n  {\r\n    id: \"1\",\r\n    message: \"What is your name?\",\r\n    trigger: \"2\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    user: true,\r\n    trigger: \"3\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    message: \"Hi {previousValue}, nice to meet you!\",\r\n    trigger: \"4\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    message: \"What do you want to know?\",\r\n    trigger: \"5\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    options: [\r\n      { value: 1, label: \"CoreDecor Contact No.\", trigger: \"6\" },\r\n      { value: 2, label: \"CoreDecor Location\", trigger: \"7\" },\r\n    ],\r\n  },\r\n\r\n  {\r\n    id: \"6\",\r\n    message: \"036615759521\",\r\n    trigger: \"8\",\r\n  },\r\n  {\r\n    id: \"7\",\r\n    message: \"Saddar, Rawalpindi\",\r\n    trigger: \"8\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    message: \"Do you want to know anything else?\",\r\n    trigger: \"9\",\r\n  },\r\n  {\r\n    id: \"9\",\r\n    options: [\r\n      {value: 1, label: \"Yes\", trigger: \"4\" },\r\n      {value: 2, label: \"No\", trigger: \"10\" },\r\n    ],\r\n  },\r\n  {\r\n    id: \"10\",\r\n    message: \"Nice to having a chat with you\",\r\n    end: true,\r\n  },\r\n];\r\n\r\nexport default chatBotSteps;\r\n","const chatBotTheme = {\r\n  background: \"#f5f8fb\",\r\n  fontFamily: \"Helvetica Neue\",\r\n  headerBgColor: \"#339CFF\",\r\n  headerFontColor: \"#fff\",\r\n  headerFontSize: \"15px\",\r\n  botBubbleColor: \"#339CFF\",\r\n  botFontColor: \"#fff\",\r\n  userBubbleColor: \"#fff\",\r\n  userFontColor: \"#4a4a4a\",\r\n};\r\n\r\nexport default chatBotTheme;\r\n","import { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport CategoryBar from './components/CategoryBar';\r\nimport Footer from \"./components/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\r\nimport OrderListScreen from \"./screens/OrderListScreen\";\r\nimport ResetPasswordScreen from './screens/ResetPasswordScreen';   \r\n\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport chatBotSteps from \"./chatBotSteps\";\r\nimport chatBotTheme from './chatBotTheme'\r\n\r\nfunction App() {\r\n  \r\n  return (\r\n    \r\n    <Router>\r\n      <Header />\r\n      <CategoryBar />\r\n\r\n      <main>\r\n        <Container>\r\n          <Route path=\"/\" component={HomeScreen} exact />{\" \"}\r\n          {/* exact param explanation: https://stackoverflow.com/questions/49162311/react-difference-between-route-exact-path-and-route-path */}\r\n          <Route path=\"/login\" component={LoginScreen} />{\" \"}\r\n          <Route path=\"/register\" component={RegisterScreen} />{\" \"}\r\n          <Route path=\"/profile\" component={ProfileScreen} />{\" \"}\r\n          <Route path=\"/shipping\" component={ShippingScreen} />{\" \"}\r\n          {/* <Route path=\"/payment\" component={PaymentScreen} />{\" \"} */}\r\n          <Route path=\"/placeorder\" component={PlaceOrderScreen} />{\" \"}\r\n          <Route path=\"/resetpassword\" component={ResetPasswordScreen} />\r\n          <Route path=\"/order/:id\" component={OrderScreen} />{\" \"}\r\n          <Route path=\"/products/:id\" component={ProductScreen} />{\" \"}\r\n          {/* Here id is dynamic */}\r\n          <Route path=\"/cart/:id?\" component={CartScreen} />{\" \"}\r\n          <Route path=\"/payment\" component={PaymentScreen} />\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component= {UserEditScreen} />\r\n          <Route path=\"/admin/productlist\" component={ProductListScreen} />\r\n          <Route path=\"/admin/product/:id/edit\" component= {ProductEditScreen} />\r\n          <Route path=\"/admin/orderlist\" component={OrderListScreen} />\r\n          \r\n          {/* Here id is dynamic. id? means id is optional */}\r\n        </Container>\r\n      </main>\r\n\r\n      <div style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n      <ThemeProvider theme={chatBotTheme}>\r\n        <ChatBot steps={chatBotSteps} />\r\n      </ThemeProvider>\r\n      </div>\r\n\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_EDIT_REQUEST,\r\n  USER_EDIT_SUCCESS,\r\n  USER_EDIT_FAIL,\r\n  USER_EDIT_RESET,\r\n  PASSWORD_RESET_REQUEST,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAIL,\r\n  PASSWORD_RESET_CONFIRM_REQUEST,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return {\r\n        users: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userEditReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_EDIT_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_EDIT_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_EDIT_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_EDIT_RESET:  \r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const resetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PASSWORD_RESET_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_RESET_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PASSWORD_RESET_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const resetPasswordConfirmReducer = (state = {}, action ) => {\r\n  switch (action.type) {\r\n    case PASSWORD_RESET_CONFIRM_REQUEST:\r\n      return { loading: true };\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PASSWORD_RESET_CONFIRM_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productTopRatedReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userEditReducer,\r\n  resetPasswordReducer,\r\n  resetPasswordConfirmReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n  orderDeliverReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderListMy: orderListMyReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userEdit: userEditReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  orderList: orderListReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  passwordReset: resetPasswordReducer,\r\n  passwordResetConfirm: resetPasswordReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst paymentMethod = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethod,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../constants/productConstant\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_UPDATE_RESET:\r\n      return {\r\n        product: {},\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  SAVE_SHIPPING_ADDRESS,\r\n  SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload), // Filter out the products that does not matched the id\r\n      };\r\n\r\n    case SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n\r\n    case SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state, // All other fields except cartItems will stay same\r\n        cartItems: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        order: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport { Provider } from 'react-redux'\r\nimport App from \"./App\";\r\nimport store from './store'\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport 'react-credit-cards/es/styles-compiled.css'\r\n// import '@fortawesome/fontawesome-free/css/all.min.css'; \r\n// import 'bootstrap-css-only/css/bootstrap.min.css';\r\n// import 'mdbreact/dist/css/mdb.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}